{
  "resourceType": "Library",
  "id": "TypeMappingExample",
  "contained": [ {
    "resourceType": "Parameters",
    "id": "options",
    "parameter": [ {
      "name": "translatorVersion",
      "valueString": "3.9.0"
    }, {
      "name": "enableAnnotations",
      "valueBoolean": true
    }, {
      "name": "enableLocators",
      "valueBoolean": true
    }, {
      "name": "disableListDemotion",
      "valueBoolean": true
    }, {
      "name": "disableListPromotion",
      "valueBoolean": true
    }, {
      "name": "format",
      "valueString": "JSON"
    }, {
      "name": "format",
      "valueString": "XML"
    }, {
      "name": "analyzeDataRequirements",
      "valueBoolean": false
    }, {
      "name": "collapseDataRequirements",
      "valueBoolean": true
    }, {
      "name": "compatibilityLevel",
      "valueString": "1.5"
    }, {
      "name": "enableCqlOnly",
      "valueBoolean": false
    }, {
      "name": "errorLevel",
      "valueString": "Info"
    }, {
      "name": "signatureLevel",
      "valueString": "Overloads"
    }, {
      "name": "validateUnits",
      "valueBoolean": true
    }, {
      "name": "verifyOnly",
      "valueBoolean": false
    } ]
  } ],
  "extension": [ {
    "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlOptions",
    "valueReference": {
      "reference": "#options"
    }
  } ],
  "url": "http://hl7.org/fhir/uv/cql/Library/TypeMappingExample",
  "name": "TypeMappingExample",
  "title": "Type Mapping Example",
  "status": "active",
  "experimental": true,
  "description": "Example CQL library providing a complete set of expressions that cover all possible CQL and FHIR Type Mapping, for both input and output. See the Type Mapping Evaluation Result example for an illustration of the type mapping in a Parameters resource.",
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Code system ExampleCodeSystem",
    "resource": "http://hl7.org/fhir/uv/cql/CodeSystem/example"
  }, {
    "type": "depends-on",
    "display": "Code system LOINC",
    "resource": "http://loinc.org"
  }, {
    "type": "depends-on",
    "display": "Value set ExampleValueSet",
    "resource": "http://hl7.org/fhir/uv/cql/ValueSet/shareable-example"
  } ],
  "parameter": [ {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "System.Vocabulary"
    }],
    "name": "ExampleVocabulary",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "FHIR.Patient"
    }],
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "System.Boolean"
    }],
    "name": "CQLBooleanExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "FHIR.System.Code"
    }],
    "name": "CQLCodeExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Coding"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "System.CodeSystem"
    }],
    "name": "CQLCodeSystemExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "System.Concept"
    }],
    "name": "CQLConceptExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "CodeableConcept"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "System.Date"
    }],
    "name": "CQLDateExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "date"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "System.DateTime"
    }],
    "name": "CQLDateTimeExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "dateTime"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "System.Decimal"
    }],
    "name": "CQLDecimalExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "decimal"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "System.Long"
    }],
    "name": "CQLLongExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "System.Integer"
    }],
    "name": "CQLIntegerExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "integer"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "System.Quantity"
    }],
    "name": "CQLQuantityExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Quantity"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "System.Ratio"
    }],
    "name": "CQLRatioExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Ratio"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "System.String"
    }],
    "name": "CQLStringExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "System.Time"
    }],
    "name": "CQLTimeExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "time"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "System.ValueSet"
    }],
    "name": "CQLValueSetExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "System.Vocabulary"
    }],
    "name": "CQLVocabularyExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "Interval<System.Date>"
    }],
    "name": "CQLDateIntervalExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "Interval<System.DateTime>"
    }],
    "name": "CQLDateTimeIntervalExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "Interval<System.Time>"
    }],
    "name": "CQLTimeIntervalExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "Interval<System.Integer>"
    }],
    "name": "CQLIntegerIntervalExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Range"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "Interval<System.Quantity>"
    }],
    "name": "CQLQuantityIntervalExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Range"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "List<System.Integer>"
    }],
    "name": "CQLListExample",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "integer"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "Tuple{X:System.Integer,Y:System.Integer}"
    }],
    "name": "CQLTupleExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "List<Choice<System.Integer,System.Decimal>>"
    }],
    "name": "CQLChoiceListExample",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "List<Tuple{X:System.Integer,Y:System.Integer}>"
    }],
    "name": "CQLTupleListExample",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "Tuple{id:System.Integer,name:System.String,address:List<Tuple{street:System.String,city:System.String,state:System.String}>}"
    }],
    "name": "CQLComplexTupleExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Resource"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "List<Tuple{id:System.Integer,name:System.String,address:List<Tuple{street:System.String,city:System.String,state:System.String}>}>"
    }],
    "name": "CQLComplexTupleListExample",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "List<Tuple{id:System.Integer,name:System.String,address:List<Tuple{street:System.String,city:System.String,state:System.String}>}>"
    }],
    "name": "CQLEmptyListExample",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "List<List<System.Integer>>"
    }],
    "name": "CQLListListExample",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Resource"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "List<FHIR.Observation>"
    }, {
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlAccessModifier",
      "valueCode": "private"
    }],
    "name": "FHIRObservations",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "FHIR.Observation"
    }, {
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlAccessModifier",
      "valueCode": "private"
    }],
    "name": "FHIRBloodGlucoseObservation",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "FHIR.boolean"
    }],
    "name": "FHIRBooleanExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "FHIR.string"
    }],
    "name": "FHIRStringExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "FHIR.Quantity"
    }],
    "name": "FHIRQuantityExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Quantity"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "FHIR.Period"
    }],
    "name": "FHIRPeriodExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "FHIR.Range"
    }],
    "name": "FHIRRangeExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Range"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "FHIR.Observation"
    }],
    "name": "FHIRObservationExample",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "List<FHIR.Observation>"
    }],
    "name": "FHIRObservationListExample",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "extension": [{
      "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlType",
      "valueString": "List<FHIR.Observation>"
    }],
    "name": "FHIREmptyObservationListExample",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "referenceRange", "referenceRange.low", "referenceRange.high" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "LyoNCkBkZXNjcmlwdGlvbjogQW4gZXhhbXBsZSBsaWJyYXJ5IGlsbHVzdHJhdGluZyB0aGUgRkhJUiBUeXBlIG1hcHBpbmcgZm9yIENRTA0KKi8NCmxpYnJhcnkgVHlwZU1hcHBpbmdFeGFtcGxlDQoNCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnDQoNCmluY2x1ZGUgRkhJUkhlbHBlcnMgdmVyc2lvbiAnNC4wLjEnDQoNCmNvZGVzeXN0ZW0gRXhhbXBsZUNvZGVTeXN0ZW06ICdodHRwOi8vaGw3Lm9yZy9maGlyL3V2L2NxbC9Db2RlU3lzdGVtL2V4YW1wbGUnDQpjb2Rlc3lzdGVtIExPSU5DOiAnaHR0cDovL2xvaW5jLm9yZycNCnZhbHVlc2V0IEV4YW1wbGVWYWx1ZVNldDogJ2h0dHA6Ly9obDcub3JnL2ZoaXIvdXYvY3FsL1ZhbHVlU2V0L3NoYXJlYWJsZS1leGFtcGxlJw0KY29kZSBFeGFtcGxlQ29kZTogJ2V4YW1wbGUtY29kZScgZnJvbSBFeGFtcGxlQ29kZVN5c3RlbQ0KY29kZSBCbG9vZEdsdWNvc2U6ICcyMzM5LTAnIGZyb20gTE9JTkMgZGlzcGxheSAnR2x1Y29zZSBCbGQtbUNuYycNCmNvbmNlcHQgRXhhbXBsZUNvbmNlcHQ6IHsgRXhhbXBsZUNvZGUgfQ0KDQpwYXJhbWV0ZXIgRXhhbXBsZVZvY2FidWxhcnkgVm9jYWJ1bGFyeQ0KDQpjb250ZXh0IFBhdGllbnQNCg0KLy8gRXhhbXBsZSB2YWx1ZXMgYXMgb3V0cHV0DQoNCi8vIENRTCBWYWx1ZXMNCi8vIEJvb2xlYW4NCmRlZmluZSBDUUxCb29sZWFuRXhhbXBsZTogdHJ1ZQ0KLy8gQ29kZQ0KZGVmaW5lIENRTENvZGVFeGFtcGxlOiBFeGFtcGxlQ29kZQ0KLy8gQ29kZVN5c3RlbQ0KZGVmaW5lIENRTENvZGVTeXN0ZW1FeGFtcGxlOiBFeGFtcGxlQ29kZVN5c3RlbQ0KLy8gQ29uY2VwdA0KZGVmaW5lIENRTENvbmNlcHRFeGFtcGxlOiBFeGFtcGxlQ29uY2VwdA0KLy8gRGF0ZQ0KZGVmaW5lIENRTERhdGVFeGFtcGxlOiBAMjAyNC0wMS0wMQ0KLy8gRGF0ZVRpbWUNCmRlZmluZSBDUUxEYXRlVGltZUV4YW1wbGU6IEAyMDI0LTAxLTAxVDEwOjMwOjAwWg0KLy8gRGVjaW1hbA0KZGVmaW5lIENRTERlY2ltYWxFeGFtcGxlOiAxMC4wDQovLyBMb25nDQpkZWZpbmUgQ1FMTG9uZ0V4YW1wbGU6IDEwTA0KLy8gSW50ZWdlcg0KZGVmaW5lIENRTEludGVnZXJFeGFtcGxlOiAxMA0KLy8gUXVhbnRpdHkNCmRlZmluZSBDUUxRdWFudGl0eUV4YW1wbGU6IDEwICdtZycNCi8vIFJhdGlvDQpkZWZpbmUgQ1FMUmF0aW9FeGFtcGxlOiA1ICdtZycgOiAxMCAnbWcnDQovLyBTdHJpbmcNCmRlZmluZSBDUUxTdHJpbmdFeGFtcGxlOiAnSm9obicNCi8vIFRpbWUNCmRlZmluZSBDUUxUaW1lRXhhbXBsZTogQFQxMDozMDowMA0KLy8gVmFsdWVTZXQNCmRlZmluZSBDUUxWYWx1ZVNldEV4YW1wbGU6IEV4YW1wbGVWYWx1ZVNldA0KLy8gVm9jYWJ1bGFyeQ0KZGVmaW5lIENRTFZvY2FidWxhcnlFeGFtcGxlOiBFeGFtcGxlVm9jYWJ1bGFyeQ0KLy8gSW50ZXJ2YWw8RGF0ZT4NCmRlZmluZSBDUUxEYXRlSW50ZXJ2YWxFeGFtcGxlOiBJbnRlcnZhbFtAMjAyNC0wMS0wMSwgQDIwMjQtMDEtMzFdDQovLyBJbnRlcnZhbDxEYXRlVGltZT4NCmRlZmluZSBDUUxEYXRlVGltZUludGVydmFsRXhhbXBsZTogSW50ZXJ2YWxbQDIwMjQtMDEtMDFUMTA6MzA6MDBaLCBAMjAyNC0wMS0zMVQxMDozMDowMFpdDQovLyBJbnRlcnZhbDxUaW1lPg0KZGVmaW5lIENRTFRpbWVJbnRlcnZhbEV4YW1wbGU6IEludGVydmFsW0BUMTA6MzA6MDAsIEBUMTE6MzA6MDBdDQovLyBJbnRlcnZhbDxJbnRlZ2VyPg0KZGVmaW5lIENRTEludGVnZXJJbnRlcnZhbEV4YW1wbGU6IEludGVydmFsWzUsIDEwXQ0KLy8gSW50ZXJ2YWw8UXVhbnRpdHk+DQpkZWZpbmUgQ1FMUXVhbnRpdHlJbnRlcnZhbEV4YW1wbGU6IEludGVydmFsWzUgJ21nJywgMTAgJ21nJ10NCi8vIExpc3QNCmRlZmluZSBDUUxMaXN0RXhhbXBsZTogeyAxLCAyLCAzLCA0LCA1IH0NCi8vIFR1cGxlDQpkZWZpbmUgQ1FMVHVwbGVFeGFtcGxlOiB7IFg6IDEsIFk6IDEgfQ0KLy8gQ2hvaWNlTGlzdA0KZGVmaW5lIENRTENob2ljZUxpc3RFeGFtcGxlOiBMaXN0PENob2ljZTxJbnRlZ2VyLCBEZWNpbWFsPj4geyAxLCAxLjAgfQ0KLy8gVHVwbGVMaXN0DQpkZWZpbmUgQ1FMVHVwbGVMaXN0RXhhbXBsZTogeyB7IFg6IDEsIFk6IDEgfSwgeyBYOiAxLCBZOiAyIH0sIHsgWDogMSwgWTogMyB9IH0NCi8vIENvbXBsZXhUdXBsZQ0KZGVmaW5lIENRTENvbXBsZXhUdXBsZUV4YW1wbGU6IHsgaWQ6IDEsIG5hbWU6ICdQYXRyaWNrJywgYWRkcmVzczogeyB7IHN0cmVldDogJzEyMyBTcGlubmluZyBBdmUnLCBjaXR5OiAnRGF5dG9uJywgc3RhdGU6ICdPSCcgfSB9IH0NCi8vIENvbXBsZXhUdXBsZUxpc3QNCmRlZmluZSBDUUxDb21wbGV4VHVwbGVMaXN0RXhhbXBsZTogeyBDUUxDb21wbGV4VHVwbGVFeGFtcGxlIH0NCi8vIEVtcHR5TGlzdA0KZGVmaW5lIENRTEVtcHR5TGlzdEV4YW1wbGU6IENRTENvbXBsZXhUdXBsZUxpc3RFeGFtcGxlIEUgd2hlcmUgZmFsc2UNCi8vIExpc3RMaXN0DQpkZWZpbmUgQ1FMTGlzdExpc3RFeGFtcGxlOiB7IENRTExpc3RFeGFtcGxlLCBDUUxMaXN0RXhhbXBsZSB9DQoNCi8vIEZISVIgVmFsdWVzDQpkZWZpbmUgcHJpdmF0ZSBGSElST2JzZXJ2YXRpb25zOiBbT2JzZXJ2YXRpb25dDQpkZWZpbmUgcHJpdmF0ZSBGSElSQmxvb2RHbHVjb3NlT2JzZXJ2YXRpb246IChGSElST2JzZXJ2YXRpb25zIE8gd2hlcmUgTy5jb2RlIH4gQmxvb2RHbHVjb3NlKS5zaW5nbGUoKQ0KDQovLyBib29sZWFuDQpkZWZpbmUgRkhJUkJvb2xlYW5FeGFtcGxlOiBQYXRpZW50LmFjdGl2ZQ0KLy8gc3RyaW5nDQpkZWZpbmUgRkhJUlN0cmluZ0V4YW1wbGU6IFBhdGllbnQubmFtZS5maXJzdCgpLmZhbWlseQ0KLy8gUXVhbnRpdHkNCmRlZmluZSBGSElSUXVhbnRpdHlFeGFtcGxlOiBGSElSQmxvb2RHbHVjb3NlT2JzZXJ2YXRpb24udmFsdWUgYXMgRkhJUi5RdWFudGl0eQ0KLy8gUGVyaW9kDQpkZWZpbmUgRkhJUlBlcmlvZEV4YW1wbGU6IFBhdGllbnQuYWRkcmVzcy5maXJzdCgpLnBlcmlvZA0KLy8gUmFuZ2UNCmRlZmluZSBGSElSUmFuZ2VFeGFtcGxlOiBGSElSQmxvb2RHbHVjb3NlT2JzZXJ2YXRpb24gTyByZXR1cm4gRkhJUi5SYW5nZSB7IGxvdzogTy5yZWZlcmVuY2VSYW5nZS5maXJzdCgpLmxvdywgaGlnaDogTy5yZWZlcmVuY2VSYW5nZS5maXJzdCgpLmhpZ2ggfQ0KLy8gT2JzZXJ2YXRpb24NCmRlZmluZSBGSElST2JzZXJ2YXRpb25FeGFtcGxlOiBGSElSQmxvb2RHbHVjb3NlT2JzZXJ2YXRpb24NCi8vIExpc3Q8T2JzZXJ2YXRpb24+DQpkZWZpbmUgRkhJUk9ic2VydmF0aW9uTGlzdEV4YW1wbGU6IEZISVJPYnNlcnZhdGlvbnMNCi8vIEVtcHR5TGlzdDxPYnNlcnZhdGlvbj4NCmRlZmluZSBGSElSRW1wdHlPYnNlcnZhdGlvbkxpc3RFeGFtcGxlOiBGSElST2JzZXJ2YXRpb25zIE8gd2hlcmUgZmFsc2U="
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}